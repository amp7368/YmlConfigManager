plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'java-library'
    id 'java'
    id 'maven-publish'
}

group 'apple.ymlmanager'
version 'v1.2'

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        url "https://jitpack.io"
    }
}
project.targetCompatibility = JavaVersion.VERSION_1_8
project.sourceCompatibility = JavaVersion.VERSION_1_8
publishing {
    publications {
        fullPublication(MavenPublication) {
            version = project.version + '-all'
            artifact shadowJar
            pom {
                group = project.group
                version = project.version + '-all'
                name = project.name
            }
        }
        simplePublication(MavenPublication) {
            version = project.version + '-simple'
            artifact jar
            pom {
                group = project.group
                version = project.version + '-simple'
                name = project.name
            }
        }
    }
}
publishFullPublicationPublicationToMavenLocal{
    version = project.version + '-all'
}
publishSimplePublicationPublicationToMavenLocal{
    version = project.version + '-simple'
}

dependencies {
    implementation 'com.github.amp7368:AppleUtilities:AppleUtilitiesCompatiblev1.0'
    compileOnly 'org.jetbrains:annotations:22.0.0'
    compileOnly "org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT"
}
jar {
    classifier 'simple'
    outputs.upToDateWhen { false }
}

shadowJar {
    dependsOn(jar)
    classifier 'all'
    outputs.upToDateWhen { false }
    relocate('apple.utilities', 'ycm.ymlmanager.plugin.apple.utilities')
}


def filesToCopy = copySpec {
    from jar.getArchiveFile()
}
task jarAndCopyFiles {
    dependsOn(jar)
    doLast {
        copy {
            with filesToCopy
            into outputfile
        }
    }
    outputs.upToDateWhen { false }
}